"""updated compensation request entity

Revision ID: bbf2b1957cc2
Revises: f7bd712ed9ed
Create Date: 2023-06-04 07:59:34.753923

"""
from datetime import datetime

import sqlalchemy as sa
from alembic import op
from sqlalchemy import MetaData, Table
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "bbf2b1957cc2"
down_revision = "f7bd712ed9ed"
branch_labels = None
depends_on = None


COMPENSATION_REQUEST_DATA = [
    {
        "id": "40e6215d-b5c6-4896-987c-f30f3678f608",
        "status": "pending",
        "created_at": datetime.fromisoformat("2023-06-01 20:11:22Z"),
        "created_by_id": 1000000000000000002,
        "project_id": 1,
        "trainer_id": 1000000000000000005,
        "training_type": "internal_training",
        "course_id": "64321",
        "activity_date": datetime.fromisoformat("2023-05-22"),
        "activity_type_id": 2,
        "is_rewarded": True,
        "request_initiator_id": 1000000000000000001,
        "rd_point": 1.5,
        "skill_id": 1,
    },
    {
        "id": "6ecd8c99-4036-403d-bf84-cf8400f67836",
        "status": "confirmed",
        "created_at": datetime.fromisoformat("2023-06-01 19:22:33Z"),
        "created_by_id": 1000000000000000002,
        "project_id": 2,
        "trainer_id": 1000000000000000004,
        "training_type": "external_training",
        "course_id": "123456",
        "activity_date": datetime.fromisoformat("2023-05-21"),
        "activity_type_id": 1,
        "is_rewarded": False,
        "request_initiator_id": None,
        "rd_point": 2,
        "skill_id": 3,
    },
]


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.alter_column(
        "compensation_requests",
        "created_by_id",
        existing_type=sa.BigInteger(),
        nullable=False,
    )
    op.alter_column(
        "compensation_requests",
        "project_id",
        existing_type=sa.INTEGER(),
        nullable=False,
    )
    op.alter_column(
        "compensation_requests",
        "trainer_id",
        existing_type=sa.BigInteger(),
        nullable=False,
    )
    op.alter_column(
        "compensation_requests",
        "activity_type_id",
        existing_type=sa.INTEGER(),
        nullable=False,
    )
    op.alter_column(
        "compensation_requests", "skill_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.drop_index("ix_compensation_requests_id", table_name="compensation_requests")
    op.drop_column("compensation_requests", "trainer_employment_type")
    op.alter_column("projects", "type_id", existing_type=sa.INTEGER(), nullable=False)

    meta = MetaData()
    meta.reflect(bind=op.get_bind(), only=("compensation_requests",))
    compensation_requests_table = Table("compensation_requests", meta)
    op.bulk_insert(compensation_requests_table, COMPENSATION_REQUEST_DATA)


def downgrade() -> None:
    op.execute(
        "DELETE FROM compensation_requests WHERE id in (40e6215d-b5c6-4896-987c-f30f3678f608, 6ecd8c99-4036-403d-bf84-cf8400f67836);"
    )

    op.alter_column("projects", "type_id", existing_type=sa.INTEGER(), nullable=True)
    op.add_column(
        "compensation_requests",
        sa.Column(
            "trainer_employment_type",
            postgresql.ENUM(
                "internal", "external", "subcontractor", name="traineremploymenttype"
            ),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.create_index(
        "ix_compensation_requests_id", "compensation_requests", ["id"], unique=False
    )
    op.alter_column(
        "compensation_requests", "skill_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "compensation_requests",
        "activity_types",
        existing_type=sa.INTEGER(),
        nullable=True,
    )
    op.alter_column(
        "compensation_requests",
        "trainer_id",
        existing_type=sa.BigInteger(),
        nullable=True,
    )
    op.alter_column(
        "compensation_requests", "project_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "compensation_requests",
        "created_by_id",
        existing_type=sa.BigInteger(),
        nullable=True,
    )
